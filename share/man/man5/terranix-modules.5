'\" t
.\"     Title: terranix-modules
.\"    Author: Ingolf Wagner
.\" Generator: DocBook XSL Stylesheets v1.79.2 <http://docbook.sf.net/>
.\"      Date: 01/01/1980
.\"    Manual: terranix reference pages
.\"    Source: terranix module documentation
.\"  Language: English
.\"
.TH "TERRANIX\-MODULES" "5" "01/01/1980" "terranix module documentation" "terranix reference pages"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" enable line breaks after slashes
.cflags 4 /
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
terranix-modules \- terranix configuration options
.SH "DESCRIPTION"
.PP
Theses are the modules you can use in your
config\&.nix
which are delivered by default by terranix\&.
.SH "OPTIONS"
.PP
You can use the following options in
config\&.nix:
.PP
\fB_module\&.args\fR
.RS 4
\m[blue]\fB\fB_module\&.args\fR\fR\m[]Additional arguments passed to each module in addition to ones like `lib`, `config`, and `pkgs`, `modulesPath`\&. This option is also available to all submodules\&. Submodules do not inherit args from their parent module, nor do they provide args to their parent module or sibling submodules\&. The sole exception to this is the argument `name` which is provided by parent modules to a submodule and contains the attribute name the submodule is bound to, or a unique generated name if it is not bound to an attribute\&. Some arguments are already passed by default, of which the following *cannot* be changed with this option: \- {var}`lib`: The nixpkgs library\&. \- {var}`config`: The results of all options after merging the values from all modules together\&. \- {var}`options`: The options declared in all modules\&. \- {var}`specialArgs`: The `specialArgs` argument passed to `evalModules`\&. \- All attributes of {var}`specialArgs` Whereas option values can generally depend on other option values thanks to laziness, this does not apply to `imports`, which must be computed statically before anything else\&. For this reason, callers of the module system can provide `specialArgs` which are available during import resolution\&. For NixOS, `specialArgs` includes {var}`modulesPath`, which allows you to import extra modules from the nixpkgs package tree without having to somehow make the module aware of the location of the `nixpkgs` or NixOS directories\&. ``` { modulesPath, \&.\&.\&. }: { imports = [ (modulesPath + "/profiles/minimal\&.nix") ]; } ``` For NixOS, the default value for this option includes at least this argument: \- {var}`pkgs`: The nixpkgs package set according to the {option}`nixpkgs\&.pkgs` option\&.
.sp
\fIType:\fR
lazy attribute set of raw value
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/lib/modules\&.nix>\fR\m[]
.RE
.RE
.PP
\fBbackend\&.etcd\fR
.RS 4
\m[blue]\fB\fBbackend\&.etcd\fR\fR\m[]etcd backend https://www\&.terraform\&.io/docs/backends/types/etcd\&.html
.sp
\fIType:\fR
null or (submodule)
.sp
\fIDefault:\fR
null
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBbackend\&.etcd\&.endpoints\fR
.RS 4
\m[blue]\fB\fBbackend\&.etcd\&.endpoints\fR\fR\m[]A space\-separated list of the etcd endpoints
.sp
\fIType:\fR
string
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBbackend\&.etcd\&.password\fR
.RS 4
\m[blue]\fB\fBbackend\&.etcd\&.password\fR\fR\m[]the password
.sp
\fIType:\fR
null or string
.sp
\fIDefault:\fR
null
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBbackend\&.etcd\&.path\fR
.RS 4
\m[blue]\fB\fBbackend\&.etcd\&.path\fR\fR\m[]The path where to store the state
.sp
\fIType:\fR
string
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBbackend\&.etcd\&.username\fR
.RS 4
\m[blue]\fB\fBbackend\&.etcd\&.username\fR\fR\m[]the username
.sp
\fIType:\fR
null or string
.sp
\fIDefault:\fR
null
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBbackend\&.local\fR
.RS 4
\m[blue]\fB\fBbackend\&.local\fR\fR\m[]local backend https://www\&.terraform\&.io/docs/backends/types/local\&.html
.sp
\fIType:\fR
null or (submodule)
.sp
\fIDefault:\fR
null
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBbackend\&.local\&.path\fR
.RS 4
\m[blue]\fB\fBbackend\&.local\&.path\fR\fR\m[]path to the state file
.sp
\fIType:\fR
string
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBbackend\&.s3\fR
.RS 4
\m[blue]\fB\fBbackend\&.s3\fR\fR\m[]s3 backend https://www\&.terraform\&.io/docs/backends/types/s3\&.html
.sp
\fIType:\fR
null or (submodule)
.sp
\fIDefault:\fR
null
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBbackend\&.s3\&.bucket\fR
.RS 4
\m[blue]\fB\fBbackend\&.s3\&.bucket\fR\fR\m[]bucket name
.sp
\fIType:\fR
string
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBbackend\&.s3\&.key\fR
.RS 4
\m[blue]\fB\fBbackend\&.s3\&.key\fR\fR\m[]path to the state file in the bucket
.sp
\fIType:\fR
string
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBbackend\&.s3\&.region\fR
.RS 4
\m[blue]\fB\fBbackend\&.s3\&.region\fR\fR\m[]region of the bucket
.sp
\fIType:\fR
string
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBdata\fR
.RS 4
\m[blue]\fB\fBdata\fR\fR\m[]Data objects, are queries to use resources which are already exist, as if they are created by a the resource option\&. See for more details : https://www\&.terraform\&.io/docs/configuration/data\-sources\&.html
.sp
\fIType:\fR
bool, int, float or str
.sp
\fIDefault:\fR
{ }
.sp
\fIExample:\fR
{ }
.RE
.PP
\fBephemeral\fR
.RS 4
\m[blue]\fB\fBephemeral\fR\fR\m[]Ephemeral objects, are a temporary resource, they are not stored\&. See for more details : https://developer\&.hashicorp\&.com/terraform/language/resources/ephemeral
.sp
\fIType:\fR
bool, int, float or str
.sp
\fIDefault:\fR
{ }
.sp
\fIExample:\fR
{ }
.RE
.PP
\fBimport\fR
.RS 4
\m[blue]\fB\fBimport\fR\fR\m[]Define terraform import\&. See for mote details : https://developer\&.hashicorp\&.com/terraform/language/import
.sp
\fIType:\fR
bool, int, float or str
.sp
\fIDefault:\fR
{ }
.sp
\fIExample:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
{
  import = [
    {
      id = "i\-abcd1234";
      to = "aws_instance\&.example";
    }
  ];
}
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBlocals\fR
.RS 4
\m[blue]\fB\fBlocals\fR\fR\m[]Define terraform variables with file scope\&. Like modules this is terraform intern and terranix has better ways\&. See for more details : https://www\&.terraform\&.io/docs/configuration/locals\&.html
.sp
\fIType:\fR
bool, int, float or str
.sp
\fIDefault:\fR
{ }
.sp
\fIExample:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
{
  locals = {
    owner = "Community Team";
    service_name = "forum";
  };
}
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBmodule\fR
.RS 4
\m[blue]\fB\fBmodule\fR\fR\m[]A terraform module, to define multiple resources, for sharing or duplication\&. The terraform module system, and has nothing to do with the module system of terranix or nixos\&. See for more details : https://www\&.terraform\&.io/docs/configuration/modules\&.html
.sp
\fIType:\fR
bool, int, float or str
.sp
\fIDefault:\fR
{ }
.sp
\fIExample:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
{
  module = {
    consul = {
      source = "github\&.com/hashicorp/example";
    };
  };
}
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBoutput\fR
.RS 4
\m[blue]\fB\fBoutput\fR\fR\m[]Useful in combination with terraform_remote_state\&. See for more details : https://www\&.terraform\&.io/docs/configuration/outputs\&.html
.sp
\fIType:\fR
bool, int, float or str
.sp
\fIDefault:\fR
{ }
.sp
\fIExample:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
{
  output = {
    instance_ip_addr = {
      value = "aws_instance\&.server\&.private_ip";
    };
  };
}
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBprovider\fR
.RS 4
\m[blue]\fB\fBprovider\fR\fR\m[]Define you API connection\&. Don\*(Aqt use secrets in here, they will be visible in the nix\-store and the resulting config\&.tf\&.json\&. Instead use terraform variables\&. See for more details : https://www\&.terraform\&.io/docs/configuration/providers\&.html or https://www\&.terraform\&.io/docs/providers/index\&.html
.sp
\fIType:\fR
bool, int, float or str
.sp
\fIDefault:\fR
{ }
.sp
\fIExample:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
{
  provider = {
    google = {
      project = "acme\-app";
      region = "us\-central1";
    };
  };
}
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBprovisioner\&.privateKeyFile\fR
.RS 4
\m[blue]\fB\fBprovisioner\&.privateKeyFile\fR\fR\m[]PrivateKey for provisioning via ssh access see https://www\&.terraform\&.io/docs/provisioners/connection\&.html This is an agnostic option, option\-authors should use this options to implement server provisioning\&.
.sp
\fIType:\fR
string
.sp
\fIExample:\fR
"~/\&.ssh/id_rsa"
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/provisioner\&.nix>\fR\m[]
.RE
.RE
.PP
\fBremote_state\&.etcd\fR
.RS 4
\m[blue]\fB\fBremote_state\&.etcd\fR\fR\m[]etcd remote state https://www\&.terraform\&.io/docs/backends/types/etcd\&.html
.sp
\fIType:\fR
attribute set of (submodule)
.sp
\fIDefault:\fR
{ }
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBremote_state\&.etcd\&.<name>\&.endpoints\fR
.RS 4
\m[blue]\fB\fBremote_state\&.etcd\&.<name>\&.endpoints\fR\fR\m[]A space\-separated list of the etcd endpoints
.sp
\fIType:\fR
string
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBremote_state\&.etcd\&.<name>\&.password\fR
.RS 4
\m[blue]\fB\fBremote_state\&.etcd\&.<name>\&.password\fR\fR\m[]the password
.sp
\fIType:\fR
null or string
.sp
\fIDefault:\fR
null
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBremote_state\&.etcd\&.<name>\&.path\fR
.RS 4
\m[blue]\fB\fBremote_state\&.etcd\&.<name>\&.path\fR\fR\m[]The path where to store the state
.sp
\fIType:\fR
string
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBremote_state\&.etcd\&.<name>\&.username\fR
.RS 4
\m[blue]\fB\fBremote_state\&.etcd\&.<name>\&.username\fR\fR\m[]the username
.sp
\fIType:\fR
null or string
.sp
\fIDefault:\fR
null
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBremote_state\&.local\fR
.RS 4
\m[blue]\fB\fBremote_state\&.local\fR\fR\m[]local remote state https://www\&.terraform\&.io/docs/backends/types/local\&.html
.sp
\fIType:\fR
attribute set of (submodule)
.sp
\fIDefault:\fR
{ }
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBremote_state\&.local\&.<name>\&.path\fR
.RS 4
\m[blue]\fB\fBremote_state\&.local\&.<name>\&.path\fR\fR\m[]path to the state file
.sp
\fIType:\fR
string
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBremote_state\&.s3\fR
.RS 4
\m[blue]\fB\fBremote_state\&.s3\fR\fR\m[]s3 remote state https://www\&.terraform\&.io/docs/backends/types/s3\&.html
.sp
\fIType:\fR
attribute set of (submodule)
.sp
\fIDefault:\fR
{ }
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBremote_state\&.s3\&.<name>\&.bucket\fR
.RS 4
\m[blue]\fB\fBremote_state\&.s3\&.<name>\&.bucket\fR\fR\m[]bucket name
.sp
\fIType:\fR
string
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBremote_state\&.s3\&.<name>\&.key\fR
.RS 4
\m[blue]\fB\fBremote_state\&.s3\&.<name>\&.key\fR\fR\m[]path to the state file in the bucket
.sp
\fIType:\fR
string
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBremote_state\&.s3\&.<name>\&.region\fR
.RS 4
\m[blue]\fB\fBremote_state\&.s3\&.<name>\&.region\fR\fR\m[]region of the bucket
.sp
\fIType:\fR
string
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/terraform/backends\&.nix>\fR\m[]
.RE
.RE
.PP
\fBresource\fR
.RS 4
\m[blue]\fB\fBresource\fR\fR\m[]The backbone of terraform and terranix to change and create state\&. See for more details : https://www\&.terraform\&.io/docs/configuration/resources\&.html
.sp
\fIType:\fR
bool, int, float or str
.sp
\fIDefault:\fR
{ }
.sp
\fIExample:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
{
  resource = {
    aws_instance = {
      web = {
        ami = "ami\-a1b2c3d4";
        instance_type = "t2\&.micro";
      };
    };
  };
}
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBterraform\fR
.RS 4
\m[blue]\fB\fBterraform\fR\fR\m[]Terraform configuration\&. But for backends have a look at the terranix options backend\&.etcd, backend\&.local and backend\&.s3\&. See for more details : https://www\&.terraform\&.io/docs/configuration/terraform\&.html
.sp
\fIType:\fR
bool, int, float or str
.sp
\fIDefault:\fR
{ }
.sp
\fIExample:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
{
  terraform = {
    backend = {
      s3 = {
        bucket = "mybucket";
        key = "path/to/my/key";
        region = "us\-east\-1";
      };
    };
  };
}
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fBusers\fR
.RS 4
\m[blue]\fB\fBusers\fR\fR\m[]User management\&. `users\&.group\&.username` is the path\&. All members in the `admins` group should be able to ssh to servers\&. This is an agnostic option, option\-authors should use this options to implement server provisioning\&.
.sp
\fIType:\fR
attribute set of attribute set of (submodule)
.sp
\fIDefault:\fR
{ }
.sp
\fIExample:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
{
  admins = {
    lassuls = {
      publicKey = "ssh\-rsa ABKAB3NzaC1yc2EAAAA\&.\&.";
    };
    mrVanDalo = {
      publicKey = "ssh\-rsa AAAAB3NzaC1yc2EAAAA\&.\&.";
    };
  };
}
.fi
.if n \{\
.RE
.\}
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/users\&.nix>\fR\m[]
.RE
.RE
.PP
\fBusers\&.<name>\&.<name>\&.publicKey\fR
.RS 4
\m[blue]\fB\fBusers\&.<name>\&.<name>\&.publicKey\fR\fR\m[]ssh public key of user
.sp
\fIType:\fR
null or string
.sp
\fIDefault:\fR
null
.sp
\fIExample:\fR
"\e${ file( ~/\&.ssh/id_rsa\&.pub ) }"
.sp
\fIDeclared by:\fR
.RS 4
\m[blue]\fB<terranix/modules/users\&.nix>\fR\m[]
.RE
.RE
.PP
\fBvariable\fR
.RS 4
\m[blue]\fB\fBvariable\fR\fR\m[]Input Variables, which can be set by `\-\-var=name` or by environment variables prefixt with `TF_VAR_`\&. Usually used in terraform modules or to ask for API tokens\&. See for more details : https://www\&.terraform\&.io/docs/configuration/variables\&.html
.sp
\fIType:\fR
bool, int, float or str
.sp
\fIDefault:\fR
{ }
.sp
\fIExample:\fR
.sp
.if n \{\
.RS 4
.\}
.nf
{
  variable = {
    image_id = {
      description = "The id of the machine image (AMI) to use for the server\&.";
      type = "string";
    };
  };
}
.fi
.if n \{\
.RE
.\}
.RE
.SH "SEE ALSO"
.PP
\fBterranix\fR(1)
.SH "AUTHOR"
.PP
\fBIngolf Wagner\fR
.RS 4
Author.
.RE
.SH "COPYRIGHT"
.br
Copyright \(co 2019\(en2022 Ingolf Wagner
.br
